// Restaurants store the users data
// Users store the data of the Restaurants

// Visit count is cross-referenced to make sure no tampering is done

Restaurant {
    Users: [] User,
    Name: String,
    PT: Integer,
    Image: [] Byte,
    Address: String,
    Prizes: [] Prize,
    id: String (UUID),
    history: [] Transaction,
    queue: [] Transaction,
    userPoints: {K: (userId: String) / V: (points: Integer)} , // Stores users points
}

Prize {
    Image: [] Byte,
    Name: String,
    id: String (UUID)
}

User {
    First: String,
    Last: String,
    id: String (UUID),
    Phone: String,
    PW: String,
    UserRestaurants: [] String (UUID) 
}

Employee {
    Owner: boolean,
    First: String,
    Last: String,
    ResturantId: String (UUID),
    id: String (UUID),
    PW: String
}

Transaction {
    Time: DateTime,
    (OPTIONAL) Approver: String (Employee ID + '/' + First + ' ' + Last),
    Requestor: String (Customer ID + '/' + First + ' ' + Last),
    (OPTIONAL) Item: String (Prize ID),
    isVisit: boolean, 
    id: String (UUID),
    status: String
}

